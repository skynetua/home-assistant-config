substitutions:
  pin_call_detect: GPIO0
  pin_btn_accept: GPIO12

  # Relays configuration
  relays_inverted: 'true'

  # Wifi credentials
  wifi_ssid: "3414"
  wifi_password: "0992827524"

  # OTA and API
  ota_password: "esphome"
  api_password: "esphome"

  # Software configuration
  call_end_detect_delay: 3000ms     # Interval between rings to detect incoming call
  relay_before_answer_delay: 10ms   # Delay before answer call
  relay_answer_on_time: 1500ms      # Delay between answer call and open/close door
  relay_open_on_time: 600ms         # How long the "open door button" will be pressed
  relay_after_open_delay: 500ms     # Delay in "answer" state after opening door
  short_click_time_from: 50ms       # Short button click min time
  short_click_time_to: 1000ms       # Long button click min time

########### End user configuration ###########


esphome:
  name: domofon
  platform: ESP8266
  board: esp01_1m

ota:

wifi:
  ssid: $wifi_ssid
  password: $wifi_password
  fast_connect: on

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Domofon Fallback Hotspot"
    password: "Pass1234"

captive_portal:

web_server:
  port: 80


logger:
  baud_rate: 0 #need this to free up UART pins

uart:
  baud_rate: 115200 # speed to STC15L101EW
  tx_pin: GPIO1
  rx_pin: GPIO3

api:
  password: $api_password
  reboot_timeout: 0s
  services:
    # Accept call service for Home Assistant
    - service: accept_call
      then:
        - logger.log: "Call service 'Accept Call'"
        - if:
            condition:
              binary_sensor.is_on: incoming_call
            then:
              script.execute: call_accept
            else:
              logger.log: "No incoming call"

    # Reject call service for Home Assistant
    - service: reject_call
      then:
        - logger.log: "Call service 'Reject Call'"
        - if:
            condition:
              binary_sensor.is_on: incoming_call
            then:
              script.execute: call_reject
            else:
              logger.log: "No incoming call"

script:
  # Accept incoming call
  - id: call_accept
    then:
      - logger.log: "Accept call"
      - script.execute: state_no_call
      - delay: $relay_before_answer_delay
      - switch.turn_on: relay_answer
      - delay: $relay_answer_on_time
      - switch.turn_on: relay_open
      - delay: $relay_open_on_time
      - switch.turn_off: relay_open
      - delay: $relay_after_open_delay
      - switch.turn_off: relay_answer

  # Reject incoming call
  - id: call_reject
    then:
      - logger.log: "Reject call"
      - script.execute: state_no_call
      - delay: $relay_before_answer_delay
      - switch.turn_on: relay_answer
      - delay: $relay_answer_on_time
      - switch.turn_off: relay_answer

  # No call state
  - id: state_no_call
    then:
      - logger.log: "Set state 'No call'"

  # Call state
  - id: state_call
    then:
      - logger.log: "Set state 'Incoming call'"
      - if:
          condition:
            switch.is_on: auto_reject
          then:
            script.execute: call_reject
      - if:
          condition:
            switch.is_on: auto_open
          then:
            script.execute: call_accept
      - if:
          condition:
            switch.is_on: auto_open_once
          then:
            - script.execute: call_accept
            - delay: 1s
            - switch.turn_off: auto_open_once

switch:
  # Automatically open door switch
  - platform: template
    name: "Открывать автоматически"
    id: auto_open
    icon: "mdi:door-open"
    optimistic: true
    restore_state: true
    on_turn_on:
      - switch.turn_off: auto_open_once
      - switch.turn_off: auto_reject
      - script.execute: state_no_call
    on_turn_off:
      script.execute: state_no_call

  # Automatically open door once switch
  - platform: template
    name: "Открыть один раз"
    id: auto_open_once
    icon: "mdi:door-open"
    optimistic: true
    restore_state: true
    on_turn_on:
      - switch.turn_off: auto_open
      - switch.turn_off: auto_reject
      - script.execute: state_no_call
    on_turn_off:
      script.execute: state_no_call

  # Automatically reject call switch
  - platform: template
    name: "Отклонять"
    id: auto_reject
    icon: "mdi:door-closed-lock"
    optimistic: true
    restore_state: true
    on_turn_on:
      - switch.turn_off: auto_open
      - switch.turn_off: auto_open_once
      - script.execute: state_no_call
    on_turn_off:
      script.execute: state_no_call

  - platform: template
    id: relay_answer
    turn_on_action:
      - uart.write: [0xA0, 0x01, 0x01, 0xA2]
    turn_off_action:
      - uart.write: [0xA0, 0x01, 0x00, 0xA1]
    optimistic: true
  - platform: template
    id: relay_open
    turn_on_action:
      - uart.write: [0xA0, 0x02, 0x01, 0xA3]
    turn_off_action:
      - uart.write: [0xA0, 0x02, 0x00, 0xA2]
    optimistic: true


binary_sensor:
  # Call detection
  - platform: gpio
    name: "Domofon incoming call"
    id: incoming_call
    device_class: lock
    pin:
      number: $pin_call_detect
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_off: $call_end_detect_delay
    on_press:
      then:
        script.execute: state_call
    on_release:
      then:
        script.execute: state_no_call

  # Accept HW button
  - platform: gpio
    name: "Domofon button"
    id: button
    pin:
      number: $pin_btn_accept
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_on: 25ms
    on_multi_click:
      # Short click - open door or enable once auto opening
      - timing:
        - ON for $short_click_time_from to $short_click_time_to
        then:
          if:
            condition:
              binary_sensor.is_on: incoming_call
            then:
              script.execute: call_accept
            else:
              if:
                condition:
                  switch.is_on: auto_open_once
                then:
                  switch.turn_on: auto_open
                else:
                  if:
                    condition:
                      switch.is_on: auto_open
                    then:
                      switch.turn_on: auto_reject
                    else:
                      switch.turn_on: auto_open_once
      # Long click - disable auto opening
      - timing:
        - ON for at least $short_click_time_to
        then:
          if:
            condition:
              binary_sensor.is_on: incoming_call
            then:
              script.execute: call_reject
            else:
              - switch.turn_off: auto_open
              - switch.turn_off: auto_open_once
              - switch.turn_off: auto_reject